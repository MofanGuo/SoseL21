package SoseL21.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import java.util.Map;
import org.jetbrains.mps.openapi.language.SReferenceLink;
import jetbrains.mps.smodel.runtime.ReferenceConstraintsDescriptor;
import jetbrains.mps.smodel.runtime.base.BaseReferenceConstraintsDescriptor;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.runtime.ReferenceScopeProvider;
import jetbrains.mps.smodel.runtime.base.BaseScopeProvider;
import org.jetbrains.mps.openapi.model.SNodeReference;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.scope.Scope;
import jetbrains.mps.smodel.runtime.ReferenceConstraintsContext;
import org.jetbrains.mps.openapi.model.SNode;
import SoseL21.behavior.SoSeWorksheet__BehaviorDescriptor;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.internal.collections.runtime.Sequence;
import SoseL21.behavior.While__BehaviorDescriptor;
import SoseL21.behavior.For__BehaviorDescriptor;
import SoseL21.behavior.IfElse__BehaviorDescriptor;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import SoseL21.behavior.Function__BehaviorDescriptor;
import SoseL21.behavior.Class__BehaviorDescriptor;
import SoseL21.behavior.ClassConstructor__BehaviorDescriptor;
import jetbrains.mps.scope.ListScope;
import java.util.HashMap;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class BooleanReference_Constraints extends BaseConstraintsDescriptor {
  public BooleanReference_Constraints() {
    super(CONCEPTS.BooleanReference$SX);
  }

  @Override
  protected Map<SReferenceLink, ReferenceConstraintsDescriptor> getSpecifiedReferences() {
    BaseReferenceConstraintsDescriptor d0 = new BaseReferenceConstraintsDescriptor(LINKS.ref$ZtkH, this, true, false) {
      @Nullable
      @Override
      public ReferenceScopeProvider getScopeProvider() {
        return new BaseScopeProvider() {
          @Override
          public SNodeReference getSearchScopeValidatorNode() {
            return new SNodePointer("r:1964bad3-1c4b-4e65-b684-83a58d98473f(SoseL21.constraints)", "6181811029411471121");
          }
          @Override
          public Scope createScope(final ReferenceConstraintsContext _context) {
            Iterable<SNode> nodes = SoSeWorksheet__BehaviorDescriptor.booleans_id5nad63GE9yQ.invoke(SNodeOperations.getNodeAncestor(_context.getContextNode(), CONCEPTS.SoSeWorksheet$t7, false, false));
            SNode getBackNode = _context.getContextNode();
            do {
              {
                final SNode thisWhile = getBackNode;
                if (SNodeOperations.isInstanceOf(thisWhile, CONCEPTS.While$nL)) {
                  nodes = Sequence.fromIterable(nodes).concat(Sequence.fromIterable(While__BehaviorDescriptor.getNodes_id5nad63GGAer.invoke(thisWhile)));
                }
              }
              {
                final SNode thisFor = getBackNode;
                if (SNodeOperations.isInstanceOf(thisFor, CONCEPTS.For$$_)) {
                  nodes = Sequence.fromIterable(nodes).concat(Sequence.fromIterable(For__BehaviorDescriptor.getNodes_id5nad63GG6Qy.invoke(thisFor)));
                }
              }
              {
                final SNode thisIfElse = getBackNode;
                if (SNodeOperations.isInstanceOf(thisIfElse, CONCEPTS.IfElse$Cl)) {
                  nodes = Sequence.fromIterable(nodes).concat(Sequence.fromIterable(IfElse__BehaviorDescriptor.getNodes_id5nad63GGvOZ.invoke(thisIfElse)));
                }
              }
              {
                final SNode thisFunction = getBackNode;
                if (SNodeOperations.isInstanceOf(thisFunction, CONCEPTS.Function$Up)) {
                  nodes = Sequence.fromIterable(nodes).concat(ListSequence.fromList(Function__BehaviorDescriptor.getNodes_id5nad63GIuzX.invoke(thisFunction)));
                }
              }
              {
                final SNode thisClass = getBackNode;
                if (SNodeOperations.isInstanceOf(thisClass, CONCEPTS.Class$cf)) {
                  nodes = Sequence.fromIterable(nodes).concat(Sequence.fromIterable(Class__BehaviorDescriptor.getNodes_id5nad63GPYkh.invoke(thisClass)));
                }
              }
              {
                final SNode thisClassConstructor = getBackNode;
                if (SNodeOperations.isInstanceOf(thisClassConstructor, CONCEPTS.ClassConstructor$WJ)) {
                  nodes = Sequence.fromIterable(nodes).concat(Sequence.fromIterable(ClassConstructor__BehaviorDescriptor.getNodes_id5nad63GPZ4Z.invoke(thisClassConstructor)));
                }
              }

              getBackNode = SNodeOperations.getParent(getBackNode);
            } while ((getBackNode != null));
            return ListScope.forNamedElements(SNodeOperations.ofConcept(nodes, CONCEPTS.Boolean$m_));

          }
        };
      }
    };
    Map<SReferenceLink, ReferenceConstraintsDescriptor> references = new HashMap<SReferenceLink, ReferenceConstraintsDescriptor>();
    references.put(d0.getReference(), d0);
    return references;
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept BooleanReference$SX = MetaAdapterFactory.getConcept(0x553bdaad1cb3493bL, 0xaccb16ef149d741aL, 0x550d21c8a2e4a3eL, "SoseL21.structure.BooleanReference");
    /*package*/ static final SConcept SoSeWorksheet$t7 = MetaAdapterFactory.getConcept(0x553bdaad1cb3493bL, 0xaccb16ef149d741aL, 0xbfd127414bf7d02L, "SoseL21.structure.SoSeWorksheet");
    /*package*/ static final SConcept While$nL = MetaAdapterFactory.getConcept(0x553bdaad1cb3493bL, 0xaccb16ef149d741aL, 0x783263aad93e941dL, "SoseL21.structure.While");
    /*package*/ static final SConcept For$$_ = MetaAdapterFactory.getConcept(0x553bdaad1cb3493bL, 0xaccb16ef149d741aL, 0x783263aad93b98b1L, "SoseL21.structure.For");
    /*package*/ static final SConcept IfElse$Cl = MetaAdapterFactory.getConcept(0x553bdaad1cb3493bL, 0xaccb16ef149d741aL, 0x783263aad93e3187L, "SoseL21.structure.IfElse");
    /*package*/ static final SConcept Function$Up = MetaAdapterFactory.getConcept(0x553bdaad1cb3493bL, 0xaccb16ef149d741aL, 0x783263aad93eaaa4L, "SoseL21.structure.Function");
    /*package*/ static final SConcept Class$cf = MetaAdapterFactory.getConcept(0x553bdaad1cb3493bL, 0xaccb16ef149d741aL, 0x783263aad9404269L, "SoseL21.structure.Class");
    /*package*/ static final SConcept ClassConstructor$WJ = MetaAdapterFactory.getConcept(0x553bdaad1cb3493bL, 0xaccb16ef149d741aL, 0x783263aad940425eL, "SoseL21.structure.ClassConstructor");
    /*package*/ static final SConcept Boolean$m_ = MetaAdapterFactory.getConcept(0x553bdaad1cb3493bL, 0xaccb16ef149d741aL, 0xbfd127414c1ae46L, "SoseL21.structure.Boolean");
  }

  private static final class LINKS {
    /*package*/ static final SReferenceLink ref$ZtkH = MetaAdapterFactory.getReferenceLink(0x553bdaad1cb3493bL, 0xaccb16ef149d741aL, 0x550d21c8a2e4a3eL, 0x403c8839c2e7a258L, "ref");
  }
}
